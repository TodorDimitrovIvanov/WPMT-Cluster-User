
I. How to build a local image:
# Source: https://medium.com/swlh/how-to-run-locally-built-docker-images-in-kubernetes-b28fbc32cc1d
------------------------------
    1. Run:
        minikube docker-env
    2. Which should produce the following:
        $Env:DOCKER_TLS_VERIFY = "1"
        $Env:DOCKER_HOST = "tcp://127.0.0.1:62703"
        $Env:DOCKER_CERT_PATH = "C:\Users\todor\.minikube\certs"
        $Env:MINIKUBE_ACTIVE_DOCKERD = "minikube"
        # To point your shell to minikube's docker-daemon, run:
        # & minikube -p minikube docker-env | Invoke-Expression
    3. So naturally we run:
        & minikube -p minikube docker-env | Invoke-Expression
    4. And then build the image using:
        docker build . --tag ___REPO___/___NAME___
    5. Lastly, add the 'imagePullPolicy: Never' setting just under the image in the Kubernetes deployment, like this:
        spec:
          template:
            metadata:
              name: hello-world-pod
            spec:
              containers:
              - name: hello-world
                image: ___REPO___/___NAME___
>>>>            imagePullPolicy: Never
              restartPolicy: Never


